model Account {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  name                  String
  userId                String
  currencyId            String       
  countryId             String?
  balance               Decimal      @default(0)
  accountNumber         String       @unique
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
  isPrimary             Boolean      @default(false)
  isDeleted             Boolean      @default(false)

  user                  User          @relation(fields: [userId], references: [id])
  transactions          Transaction[] 
  country               Country?      @relation(fields: [countryId], references: [id])
  currency              Currency      @relation(fields: [currencyId], references: [id])
}

model Transaction {
  id                String    @id @default(dbgenerated("gen_random_uuid()"))
  accountId         String
  amount            Decimal
  fee               Decimal  @default(0)
  transactionType   TransactionType
  status            String   @default("PENDING") 
  direction        TransactionDirection
  createdAt         DateTime @default(now())
  completedAt       DateTime?
  reference         String?
  transferGroupId   String?



  account           Account[]
}